"use strict";(self.webpackChunkada_cad_docs=self.webpackChunkada_cad_docs||[]).push([[6668],{64944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var s=t(85893),r=t(11151);const i={},c="invert",l={id:"develop/reference/sequence/OneD/invert",title:"invert",description:"This function will invert the values of the sequence. This assumes that the numbers in the sequence correspond with 0 meaning heddle lowered and 1 meaning heddle lifted. So, this function flips 0 values to 1 and vice versa. It will leave values of 2 unchanged.",source:"@site/docs/develop/reference/sequence/OneD/invert.md",sourceDirName:"develop/reference/sequence/OneD",slug:"/develop/reference/sequence/OneD/invert",permalink:"/docs/develop/reference/sequence/OneD/invert",draft:!1,unlisted:!1,editUrl:"https://github.com/UnstableDesign/AdaCAD_Documentation/tree/main/docs/develop/reference/sequence/OneD/invert.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"import",permalink:"/docs/develop/reference/sequence/OneD/import"},next:{title:"matchSize",permalink:"/docs/develop/reference/sequence/OneD/matchSize"}},a={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Implementation",id:"implementation",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"invert",children:"invert"}),"\n",(0,s.jsx)(n.p,{children:"This function will invert the values of the sequence. This assumes that the numbers in the sequence correspond with 0 meaning heddle lowered and 1 meaning heddle lifted. So, this function flips 0 values to 1 and vice versa. It will leave values of 2 unchanged."}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"none"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"the current Sequence.OneD object"}),"\n",(0,s.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"let seq = new Sequence.OneD([0,0,1,1])\nseq.invert()\n"})}),"\n",(0,s.jsx)(n.p,{children:"After calling this operation, the sequence is [1, 1, 0, 0]."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"let seq = new Sequence.OneD([0,0,1,1, 2, 2])\nseq.invert\n"})}),"\n",(0,s.jsx)(n.p,{children:"After calling this operation, the sequence is [1, 1, 0, 0, 2, 2]."}),"\n",(0,s.jsx)(n.p,{children:"In the unlikely event you are storing other number in the sequence object (say, just to organize a sequence of any number), this function will convert any number that isn't 2 to 1 (if the value was 0), and 0, if the value was anything else."})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>c});var s=t(67294);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);