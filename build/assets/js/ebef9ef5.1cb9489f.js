"use strict";(self.webpackChunkada_cad_docs=self.webpackChunkada_cad_docs||[]).push([[7078],{54586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=n(85893),s=n(11151);const i={title:"join top",sidebar_label:"join top",tags:["cloth"]},r="join top",a={id:"reference/operations/join_top",title:"join top",description:"Joins drafts assigned to the inlets vertically.",source:"@site/docs/reference/operations/join_top.md",sourceDirName:"reference/operations",slug:"/reference/operations/join_top",permalink:"/docs/reference/operations/join_top",draft:!1,unlisted:!1,editUrl:"https://github.com/UnstableDesign/AdaCAD_Documentation/tree/main/docs/reference/operations/join_top.md",tags:[{label:"cloth",permalink:"/docs/tags/cloth"}],version:"current",frontMatter:{title:"join top",sidebar_label:"join top",tags:["cloth"]},sidebar:"learnSidebar",previous:{title:"join left",permalink:"/docs/reference/operations/join_left"},next:{title:"pattern across length",permalink:"/docs/reference/operations/weft_profile"}},l={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Inlets",id:"inlets",level:2},{value:"Application",id:"application",level:2},{value:"Developer",id:"developer",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"join-top",children:"join top"}),"\n",(0,o.jsx)(t.p,{children:"Joins drafts assigned to the inlets vertically."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"file",src:n(77115).Z+"",width:"1164",height:"1124"})}),"\n",(0,o.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"calculate repeats"}),": this defines what happens if/when you connect drafts with different numbers of warp ends. If ",(0,o.jsx)(t.code,{children:"repeat inputs to match size"})," is selected, AdaCAD will expand the number of ends in the output draft such that all structures repeat at the even intervals across along width of the cloth. If the ",(0,o.jsx)(t.code,{children:"do not repeat inputs to match size"})," is selected, unset ends will be added to drafts with fewer ends."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"inlets",children:"Inlets"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"draft"}),": connect all the drafts that you would like to arrange from left to right. The first draft connected will be closest to the origin."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"warp pattern"}),": option to connect a draft that defines the warp colors and systems to use across the output draft"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"application",children:"Application"}),"\n",(0,o.jsx)(t.p,{children:"To arrange different structures across rows"}),"\n",(0,o.jsx)(t.h2,{id:"developer",children:"Developer"}),"\n",(0,o.jsxs)(t.p,{children:["adacad id: ",(0,o.jsx)(t.code,{children:"join top"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},77115:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/join_top-816266a9506230e9e602c7037cad72a2.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var o=n(67294);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);