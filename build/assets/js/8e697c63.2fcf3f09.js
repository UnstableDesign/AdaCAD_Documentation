"use strict";(self.webpackChunkada_cad_docs=self.webpackChunkada_cad_docs||[]).push([[5849],{44901:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=r(85893),d=r(11151);const a={},i="hasCell",s={id:"develop/reference/drawdown/hasCell",title:"hasCell",description:"Returns true if a given index exists within a drawdown.",source:"@site/docs/develop/reference/drawdown/hasCell.md",sourceDirName:"develop/reference/drawdown",slug:"/develop/reference/drawdown/hasCell",permalink:"/docs/develop/reference/drawdown/hasCell",draft:!1,unlisted:!1,editUrl:"https://github.com/UnstableDesign/AdaCAD_Documentation/tree/main/docs/develop/reference/drawdown/hasCell.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"Drawdown",permalink:"/docs/develop/reference/drawdown/"},next:{title:"isUp",permalink:"/docs/develop/reference/drawdown/isUp"}},o={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Implementation",id:"implementation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"hascell",children:"hasCell"}),"\n",(0,t.jsx)(n.p,{children:"Returns true if a given index exists within a drawdown."}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/docs/develop/reference/drawdown/",children:"Drawdown"}),": the drawdown to check"]}),"\n",(0,t.jsx)(n.li,{children:"number: the weft pick number"}),"\n",(0,t.jsx)(n.li,{children:"number: the warp end number"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:"boolean: true if the pick and end are within valid indexes in the drawdown. False if not."}),"\n",(0,t.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"\nif(hasCell(drawdown, i, j)){\n    drawdown[i][j] = createCell(true);\n}\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"This function checks to make sure the index i, j (i = weft pick, j = warp end) exists in the drawdown object. If it does, it adds a cell to that location."})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>i});var t=r(67294);const d={},a=t.createContext(d);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);