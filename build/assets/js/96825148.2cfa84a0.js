"use strict";(self.webpackChunkada_cad_docs=self.webpackChunkada_cad_docs||[]).push([[7426],{32826:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(85893),r=n(11151);const i={title:"interlace wefts",sidebar_label:"interlace wefts",tags:["advanced","compound"]},s="interlace wefts",c={id:"reference/operations/interlace",title:"interlace wefts",description:"Creates a new draft by taking one pic from each input draft and assigning them to successive pics in the output draft.",source:"@site/docs/reference/operations/interlace.md",sourceDirName:"reference/operations",slug:"/reference/operations/interlace",permalink:"/docs/reference/operations/interlace",draft:!1,unlisted:!1,editUrl:"https://github.com/UnstableDesign/AdaCAD_Documentation/tree/main/docs/reference/operations/interlace.md",tags:[{label:"advanced",permalink:"/docs/tags/advanced"},{label:"compound",permalink:"/docs/tags/compound"}],version:"current",frontMatter:{title:"interlace wefts",sidebar_label:"interlace wefts",tags:["advanced","compound"]},sidebar:"learnSidebar",previous:{title:"interlace warps",permalink:"/docs/reference/operations/interlacewarps"},next:{title:"layer",permalink:"/docs/reference/operations/layer"}},o={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Inlets",id:"inlets",level:2},{value:"Application",id:"application",level:2},{value:"Developer",id:"developer",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"interlace-wefts",children:"interlace wefts"}),"\n",(0,a.jsx)(t.p,{children:"Creates a new draft by taking one pic from each input draft and assigning them to successive pics in the output draft."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"file",src:n(65605).Z+"",width:"880",height:"1100"})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"calculate repeats"}),": this defines what happens if/when you connect drafts with different pic numbers. If ",(0,a.jsx)(t.code,{children:"repeat inputs to match size"})," is selected, AdaCAD will expand the number of pics in the output draft such that all input structures repeat at the even intervals across along length of the cloth. If the ",(0,a.jsx)(t.code,{children:"do not repeat inputs to match size"})," the smaller draft will integrated, but not repeated, into the larger draft."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"inlets",children:"Inlets"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"drafts"}),": connect all the drafts you would like to interlace"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"warp system map"}),": an optional field if you'd like to assign each warp in the output to a specific color or system sequence."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"application",children:"Application"}),"\n",(0,a.jsx)(t.p,{children:"Combines two structures into a compound structure. For instance, for overshot, you might interlace a tabby into a floating structure, the alternating tabby pics would add structure, the floats would add surface color and texture"}),"\n",(0,a.jsx)(t.h2,{id:"developer",children:"Developer"}),"\n",(0,a.jsxs)(t.p,{children:["adacad id: ",(0,a.jsx)(t.code,{children:"interlace"})]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65605:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/interlace-b2b75194fc14374f53d51cfab350b65d.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>s});var a=n(67294);const r={},i=a.createContext(r);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);