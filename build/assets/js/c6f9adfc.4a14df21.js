"use strict";(self.webpackChunkada_cad_docs=self.webpackChunkada_cad_docs||[]).push([[8460],{63029:e=>{e.exports=JSON.parse('{"label":"compute","permalink":"/docs/tags/compute","allTagsPath":"/docs/tags","count":4,"items":[{"id":"reference/operations/cutout","title":"cut, (a, b) => (a NAND b)","description":"Applies binary math to two drafts. To do so, it looks at each interlacement in input drafts a and b. If a and b are both marked as having warped raised, it changes the value to warp lowered, effectively cutting the black cells in b from a. This is the opposite of mask","permalink":"/docs/reference/operations/cutout"},{"id":"reference/operations/diff","title":"diff, (a, b) => (a NEQ b)","description":"Applies binary math to two drafts. To do so, it looks at each interlacement in input drafts a and b and it returns a black cell in any location where the two draft cells were different","permalink":"/docs/reference/operations/diff"},{"id":"reference/operations/mask","title":"mask, (a,b) => (a AND b)","description":"Applies binary math to two drafts. To do so, it looks at each interlacement in input drafts a and b  If a is marked warp raised and b marked warp raised, it sets the corresponding interlacement in the output draft to warp raised. Otherwise, the interlacement is marked warp lowered. This effectively masks draft a with draft b","permalink":"/docs/reference/operations/mask"},{"id":"reference/operations/overlay","title":"overlay, (a,b) => (a OR b)","description":"Applies binary math to two drafts. To do so, it looks at each interlacement in input drafts a and b. If either interlacement a or b are marked as warp lifted, the resulting draft will have a warp raised in that location.","permalink":"/docs/reference/operations/overlay"}],"unlisted":false}')}}]);